name: 'RepoDynamics PyTester'
description: 'Test Python packages'
author: 'Armin Ariamajd'
branding:
  icon: file-text
  color: blue

inputs:
  repository:
    description: Full name of the repository, i.e., 'owner-username/repo-name'.
    required: false
    default: ${{ github.repository }}
  ref:
    description: Git reference to check out in the repository.
    required: false
    default: ${{ github.ref }}
  python-version:
    description: Python version to use.
    required: false
    default: 3.x
  tests-path:
    description: >-
      Path (relative to the repository root) to the directory containing 
      the test-suite's setup file (e.g., pyproject.toml).
    required: false
    default: tests
  tests-name:
    description: Name of the testsuite package to import.
    required: true
  pkg-src:
    description: Source to install the package; either 'github', 'testpypi', or 'pypi'.
    required: false
    default: github
  pkg-path:
    description: >-
      Path (relative to the repository root) to the directory containing 
      the package's setup file (e.g., pyproject.toml).
      This is only used when `package-source` is set to 'GitHub'.
    required: false
    default: pkg
  pkg-name:
    description: Name of the package to install, when `pkg-src` is 'PyPI' or 'TestPyPI'.
    required: false
    default: ""
  pkg-version:
    description: |
      Version of the package to download and install, when `pkg-src` is 'PyPI' or 'TestPyPI'.
      If not specified, the latest version will be installed.
    required: false
    default: ""
  pkg-req-path:
    description: |
      Path (relative to the repository root) to the requirements.txt file for the package.
      This is only used when `pkg-src` is 'TestPyPI', in which case the package will
      be installed without its dependencies from TestPyPI, and the dependencies will be
      installed from the requirements.txt file to avoid security vulnerabilities and other issues.
    required: false
    default: pkg/requirements.txt
#  path-report-pytest:
#    description: Path to the pytest reports directory relative to the repository root.
#    required: false
#    default: ""
#  path-report-coverage:
#    description: Path to the coverage reports directory relative to the repository root.
#    required: false
#    default: ""
#  path-cache-pytest:
#    description: Path to the pytest cache directory relative to the repository root.
#    required: false
#    default: ""
#  path-cache-coverage:
#    description: Path to the coverage cache directory relative to the repository root.
#    required: false
#    default: ""
  retries:
    description: Maximum number of retries for downloading the package from PyPI or TestPyPI.
    required: false
    default: '40'
  retry-sleep-seconds:
    description: Delay between retries in seconds.
    required: false
    default: '30'
  pyargs:
    description: >-
      Fully qualified names of test cases to run,
      as a string representation of a JSON array,
      e.g., '["module1", "module2.class1", "module3.class2.test1"]'.
      These can be sub-packages, modules, classes, or individual test functions
      in the test-suite. If not provided, the entire test-suite will be run.
    required: false
    default: ""
  args:
    description: >-
      Additional arguments to pass to the test-runner,
      as a string representation of a JSON array,
      e.g., '["--verbose", "--color=yes"]'.
    required: false
    default: ""
  overrides:
    description: >-
      Configuration options to override in the default pytest configuration file,
      as a string representation of a JSON object,
      e.g., '{"key1": "value1", "key2": "value2"}'.
      These should be specified as key-value pairs, corresponding to the configuration
      option name and the new value, respectively.
      They are passed to pytest as `--override-ini {KEY}={VALUE}` arguments.
    required: false
    default: ""
  report-artifact-name:
    description: Name of the artifact to upload.
    required: false
    default: Test-Suite Report
  upload-codecov:
    description: Whether to upload the coverage report to Codecov.
    required: false
    default: 'true'
  codecov-yml-path:
    description: Path to the Codecov configuration file relative to the repository root.
    required: false
    default: .github/.codecov.yml

runs:
  using: composite
  steps:
    - name: Initialization
      shell: bash
      run: |  # Use `$GITHUB_ACTION_PATH` instead of `github.action_path`: https://github.com/orgs/community/discussions/25910
        # Initialization
        printf "\n$(cat $GITHUB_ACTION_PATH/docs/media/logo/full.txt)\n\n"
        python "${{ github.action_path }}/action/script/log.py" "1. Initialization"
        python "${{ github.action_path }}/action/script/log.py" "1.1. Repository Checkout"

    - name: Repository Checkout
      uses: actions/checkout@v4  # https://github.com/actions/checkout
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        fetch-tags: true
        path: repo

    - name: Python Setup
      shell: bash
      run: |
        # Python Setup
        python "${{ github.action_path }}/action/script/log.py" "1.2. Python Setup"
        python "${{ github.action_path }}/action/script/log.py" "1.2.1. Package"
    - uses: actions/setup-python@v5  # https://github.com/actions/setup-python
      id: py-setup
      with:
        python-version: ${{ inputs.python-version }}

    - name: Python Setup (Action)
      shell: bash
      run: |
        # Python Setup (Action)
        python "${{ github.action_path }}/action/script/log.py" "1.2.2 Action"
        cp $GITHUB_ACTION_PATH/action/requirements.txt .
    - uses: actions/setup-python@v5  # https://github.com/actions/setup-python
      with:
        python-version: 3.x
        cache: pip
        cache-dependency-path: requirements.txt

    - name: Environment Setup
      id: env-setup
      env:
        RD_PYTESTER__PYTHON_PATH: ${{ steps.py-setup.outputs.python-path }}
        RD_PYTESTER__REPO_PATH: repo
        RD_PYTESTER__TESTS_PATH: ${{ inputs.tests-path }}
        RD_PYTESTER__PKG_SRC: ${{ inputs.pkg-src }}
        RD_PYTESTER__PKG_PATH: ${{ inputs.pkg-path }}
        RD_PYTESTER__PKG_NAME: ${{ inputs.pkg-name }}
        RD_PYTESTER__PKG_VERSION: ${{ inputs.pkg-version }}
        RD_PYTESTER__PKG_REQ_PATH: ${{ inputs.pkg-req-path }}
        RD_PYTESTER__RETRIES: ${{ inputs.retries }}
        RD_PYTESTER__RETRY_SLEEP_SECONDS: ${{ inputs.retry-sleep-seconds }}
      shell: bash
      run: |
        # Environment Setup
        python "${{ github.action_path }}/action/script/log.py" "1.3. Environment Setup"
        
        echo "::group::Hardware and OS Overview"
        uname -a
        echo "::endgroup::"
        
        python "${{ github.action_path }}/action/script/log.py" "1.3.1 Action"
        
        echo "::group::Pip Upgrade"
        python -m pip install --upgrade pip
        echo "::endgroup::"
        
        echo "::group::Requirements Installation"
        python -m pip install -r requirements.txt
        echo "::endgroup::"
        
        echo "::group::Action Installation"
        python -m pip install "${{ github.action_path }}/action"
        echo "::endgroup::"
        
        echo "::group::Environment Overview"
        python -m pip list
        echo "::endgroup::"
        
        python "${{ github.action_path }}/action/src/pytester/env_setup.py"

    - name: Test Suite Execution
      env:
        RD_PYTESTER__TESTS_NAME: ${{ inputs.tests-name }}
        RD_PYTESTER__PYARGS: ${{ inputs.pyargs }}
        RD_PYTESTER__ARGS: ${{ inputs.args }}
        RD_PYTESTER__OVERRIDES: ${{ inputs.overrides }}
        CI: true
      shell: bash
      run: |
        # Test Suite Execution
        python "${{ github.action_path }}/action/script/log.py" "2. Test Suite Execution"
        
        ${{ steps.env-setup.outputs.venv-python-path }} "${{ github.action_path }}/action/script/test_run.py"
        
        python "${{ github.action_path }}/action/script/log.py" "3. Finalization"
        python "${{ github.action_path }}/action/script/log.py" "3.1. Report Upload"

    - name: Report Upload
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.report-artifact-name }}
        path: report

    - name: Coverage Upload
      if: ${{ !cancelled() && inputs.upload-codecov == 'true' }}
      shell: bash
      run: |
        # Coverage Upload
        python "${{ github.action_path }}/heading.py" 2 "Coverage Upload"
    - if: ${{ !cancelled() && inputs.upload-codecov == 'true' }}
      # https://github.com/marketplace/actions/codecov
      # https://github.com/codecov/codecov-action
      env:
        OS: ${{ runner.os }}
        PYTHON: ${{ inputs.python-version }}
      uses: codecov/codecov-action@v4
      with:
        # TODO: Check that env_vars are correctly set. (https://github.com/codecov/codecov-action/pull/64)
        codecov_yml_path: repo/${{ inputs.codecov-yml-path }}
        directory: report
        env_vars: OS,PYTHON
        fail_ci_if_error: false
        root_dir: repo
        use_oidc: true  # https://github.com/codecov/codecov-action/issues/1489#issuecomment-2197308411
        verbose: true
